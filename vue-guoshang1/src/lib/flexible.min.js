(function(d, k) {
	var r = d.document;
	var c = r.documentElement;
	var m = r.querySelector('meta[name="viewport"]');
	var a = 0;
	var q = 0;
	var b = null;
	var f = k.flexible || (k.flexible = {});
	if(m) {
		var g = m.getAttribute("content").match(/initial\-scale=([\d\.]+)/);
		if(g) {
			q = parseFloat(g[1]);
			a = parseInt(1 / q)
		}
	}
	if(!a && !q) {
		var p = d.navigator.appVersion.match(/android/gi);
		var n = d.navigator.appVersion.match(/iphone/gi);
		var h = d.navigator.appVersion.match(/LieBao/gi);
		var o = d.navigator.appVersion.match(/Sogou/gi);
		var j = String(n || h || o || p || "").toLowerCase();
		var l = Math.floor(d.devicePixelRatio) || 1;
		if(n) {
			if(l >= 3 && (!a || a >= 3)) {
				a = 3
			} else {
				if(l >= 2 && (!a || a >= 2)) {
					a = 2
				} else {
					a = 1
				}
			}
		} else {
			if(h || o) {
				a = 1
			} else {
				a = l
			}
		}
		r.body.className = j;
		q = 1 / a
	}
	if(!m) {
		m = r.createElement("meta");
		m.setAttribute("name", "viewport");
		m.setAttribute("content", "initial-scale=" + q + ", maximum-scale=" + q + ", minimum-scale=" + q + ",user-scalable=no");
		if(c.firstElementChild) {
			c.firstElementChild.appendChild(m)
		} else {
			var i = r.createElement("div");
			i.appendChild(m);
			r.write(i.innerHTML)
		}
	}
	c.setAttribute("data-dpr", a);
	var e = function() {
		var s = c.getBoundingClientRect().width;
		if(s / a > 540) {
			s = 540 * a
		}
		var t = s / 7.5;
		t = Math.max(t, 32);
		c.style.fontSize = t + "px";
		f.width = s;
		f.rem = d.rem = t
	};
	["resize", "orientationchange"].forEach(function(s) {
		d.addEventListener(s, function(t) {
			clearTimeout(b);
			b = setTimeout(e, 300)
		}, false)
	});
	d.addEventListener("pageshow", function(s) {
		if(s.persisted) {
			clearTimeout(b);
			b = setTimeout(e, 300)
		}
	}, false);
	if(r.readyState === "complete") {
		r.body.style.fontSize = 12 * a + "px"
	} else {
		r.addEventListener("DOMContentLoaded", function(s) {
			r.body.style.fontSize = 12 * a + "px"
		}, false)
	}
	e();
	f.dpr = d.dpr = a;
	f.setFontSize = e;
	f.rem2px = function(t) {
		var s = parseFloat(t) * this.rem;
		if(typeof t === "string" && t.match(/rem$/)) {
			s += "px"
		}
		return s
	};
	f.px2rem = function(t) {
		var s = parseFloat(t) / this.rem;
		if(typeof t === "string" && t.match(/px$/)) {
			s += "rem"
		}
		return s
	}
}(window, window.tcf || (window.tcf = {})));